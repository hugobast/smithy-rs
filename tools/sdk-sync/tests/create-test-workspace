#!/bin/bash
#
# Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
# SPDX-License-Identifier: Apache-2.0
#
# This script creates fake smithy-rs, aws-sdk-rust, and aws-doc-sdk-examples repositories
# with just enough fake content in them to fully and quickly exercise the sync tool.
#
# This is invoked automatically by `e2e_test.rs` when running tests. To manually inspect
# what it creates, create a temporary directory somewhere and invoke it from inside that directory.
#

set -eux

SCRIPT_PATH=$(cd -- "$(dirname -- "${BASH_SOURCE[0]}")" &> /dev/null && pwd)
INCLUDE_MODEL_CHANGES=0
if [[ $# -eq 1 && "$1" == "--with-model-changes" ]]; then
    INCLUDE_MODEL_CHANGES=1
fi

mkdir aws-doc-sdk-examples
mkdir aws-sdk-rust
mkdir smithy-rs

# Set up a fake examples repo
pushd aws-doc-sdk-examples
git init .
mkdir -p rust_dev_preview/s3
echo "Some S3 example" > rust_dev_preview/s3/fake_content
echo "manifest stuff" > rust_dev_preview/Cargo.toml
git add .
git -c user.name="Test Dev" -c user.email="testdev@example.com" commit -m "Add S3 example"
EXAMPLES_HEAD="$(git rev-parse HEAD)"
echo "Some modified S3 example" > rust_dev_preview/s3/fake_content
git -c user.name="Test Dev" -c user.email="testdev@example.com" commit -am "Update S3 example"
popd

# Set up a fake smithy-rs repo
pushd smithy-rs
git init .
mkdir -p aws/sdk/examples
mkdir -p aws/sdk/build/aws-sdk/examples/s3
mkdir -p aws/sdk/build/aws-sdk/sdk/s3
echo "Some S3 client code" > aws/sdk/build/aws-sdk/sdk/s3/fake_content
cat "${SCRIPT_PATH}/fake-sdk-assemble" > gradlew
chmod +x gradlew
git add .
git -c user.name="Test Dev" -c user.email="testdev@example.com" commit -m "Initial commit"
SMITHY_RS_HEAD="$(git rev-parse HEAD)"
echo "Some updated S3 client code" > aws/sdk/build/aws-sdk/sdk/s3/fake_content
git -c user.name="Another Dev" -c user.email="anotherdev@example.com" commit -am "Update S3 to do more"
echo "Some server changes" > server
git add .
git -c user.name="Server Dev" -c user.email="serverdev@example.com" commit -m "Make some server changes"
popd

# Set up a fake aws-sdk-rust repo
pushd aws-sdk-rust
git init .
mkdir -p aws-models
mkdir -p examples/s3
mkdir -p sdk/s3
echo "Ancient S3 model" > aws-models/s3.json
echo "Old endpoints.json" > aws-models/endpoints.json
echo "Some S3 client code" > sdk/s3/fake_content
echo "Ancient S3 model" > sdk/s3/s3.json
echo "Some S3 example" > examples/s3/fake_content
echo "Some handwritten file" > some_handwritten
( \
    echo ".git"; \
    echo ".handwritten"; \
    echo "some_handwritten"; \
    echo "/aws-models/"; \
) > .handwritten
( \
    echo '# special test comment: this came from the previous release'; \
    echo 'smithy_rs_revision = "'"${SMITHY_RS_HEAD}"'"'; \
    echo 'aws_doc_sdk_examples_revision = "'"${EXAMPLES_HEAD}"'"'; \
    echo '[crates.aws-sdk-s3]'; \
    echo 'category = "AwsSdk"'; \
    echo 'version = "0.1.0"'; \
    echo 'source_hash = "doesntmatterhere"'; \
    echo 'model_hash = "doesntmatterhere"'; \
) > versions.toml
git add .
git -c user.name="Test Dev" -c user.email="testdev@example.com" commit -m "Initial commit"
popd

# Make an origin for aws-sdk-rust
mv aws-sdk-rust aws-sdk-rust-origin
git clone aws-sdk-rust-origin aws-sdk-rust

# (Optionally) Add model changes
if [[ "${INCLUDE_MODEL_CHANGES}" == "1" ]]; then
    pushd aws-sdk-rust
    echo "Updated S3 model" > aws-models/s3.json
    git -c user.name="Automated Process" -c user.email="bot@example.com" commit -am "Update the S3 model"
    echo "Updated endpoints.json" > aws-models/endpoints.json
    git -c user.name="Automated Process" -c user.email="bot@example.com" commit -am "Update endpoints.json"
    popd
fi
